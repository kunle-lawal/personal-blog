{"version":3,"sources":["components/layout/Navbar.js","store/actions/navActions.js","components/miniComponents/TimePosted.js","store/actions/reactionAction.js","components/miniComponents/StoryActions.js","components/miniComponents/scrollToTop.js","store/actions/authActions.js","components/stories/StorySummary.js","components/stories/StoriesList.js","components/dashboard/Pagination.js","components/dashboard/FeaturedPost.js","components/dashboard/ThreeUp.js","components/dashboard/HeroSpace.js","components/dashboard/Dashboard.js","components/dashboard/Topic.js","store/actions/storyAction.js","components/stories/PostDetails/Hero.js","components/stories/PostDetails/PostContent.js","components/stories/PostDetails/Social.js","components/stories/PostDetails/Aside.js","components/stories/PostDetails/PostTail.js","components/stories/PostDetails/Post.js","store/actions/storyStateAction.js","components/stories/CreateStory.js","components/miniComponents/localstoreage.js","components/miniComponents/auth/AuthModule.js","components/dashboard/PageNotFound.js","components/layout/Footer.js","App.js","serviceWorker.js","store/reducers/storyStateReducer.js","store/reducers/storyReducer.js","store/reducers/commentReducer.js","store/reducers/reactionsReducer.js","store/reducers/authReducer.js","store/reducers/navReducer.js","store/reducers/rootReducer.js","config/fbConfig.js","index.js"],"names":["compose","connect","state","ownProps","auth","firebase","nav","Ids","firestore","data","profileData","profile","dispatch","toggleMobileNav","getstate","type","resetView","openFullNav","closeFullNav","toggleFullNav","firestoreConnect","collection","props","mobileToggled","react_default","a","createElement","className","react_router_dom","to","class","TimePosted","time","updateUserReactionData","uid","id","action","doc","set","Object","defineProperty","reaction","liked","merge","incrementReaction","likeAmt","reactions","total","FieldValue","increment","Reactions","thumb","highlighted","firstLoad","setHighlight","_this","undefined","setState","toggleReaction","e","target","updateLikes","_this$props$reactions","reactionData","docID","val","userData","updateReaction","showAuthModule","this","_this$props$reactions2","onClick","Component","scrollToTop","getState","_ref","getFirebase","getFirestore","user","currentUser","c","document","documentElement","scrollTop","body","window","requestAnimationFrame","scrollTo","story","banned","src","alt","miniComponents_TimePosted","commentsTotal","views","StoryList","stories","map","stories_StorySummary","key","Pagination","paginationList","resetDone","resetList","_this$props$paginateP","paginateProp","totalStories","limit","currentPage","totalPages","Math","round","_CurrentPage","startVal","endVal","Number","i","push","_this2","_this$props$paginateP2","pageType","item","index","FeaturedPost","Fragment","postList","ThreeUp","TwoUp","HeroSpace","dashboard_FeaturedPost","ThreeUp_ThreeUp","Dashboard","prevPage","sameStoryIds","changePage","startAt","endAt","isNaN","match","params","timeoutId","setTimeout","loadType","clearInterval","prevProps","_this$props","prevStory","currPage","length","_this$props2","filteredStories","react_router","dashboard_HeroSpace","StoriesList","ordered","postIds","totalIds","banList","url","orderBy","Topic","scrolled","startAtOffset","loaded","filter","includes","userID","loadMore","topic","topic_limit","_ref3","where","PostContent","width","style","Social","AuthorFeature","Categories","Newsletter","onChange","value","placeholder","RecentPost","AboutAuthor","RelatedTags","RelatedPosts","ThreeUp_TwoUp","Post","Hero","PostDetails_Social","PostDetails_PostContent","PostTail_RelatedTags","Aside_AuthorFeature","Aside_RecentPost","Aside_Categories","Aside_Newsletter","PostTail_AboutAuthor","PostTail_RelatedPosts","increaseViews","_ref2","CreateStory","title","content","adding","errors","storyError","topScrolled","underReview","openDropdown","handleTopic","handleChange","isEmpty","getElementById","color","backgroundColor","reduce","string","newString","checkAuth","handleSubmit","preventDefault","intervalId","setInterval","getTimerVal","bind","assertThisInitialized","createStory","postId","userId","lastPost","timerVal","Date","now","componentDidMount","trunc_text","text","maxLen","substring","toggleDropdown","localStorage","setItem","JSON","stringify","onSubmit","maxLength","spellCheck","floor","storyState","error","storyAdded","addedStory","ids","userCollection","add","postID","toUpperCase","createdAt","getTime","safe","flags","laugh","active","shook","then","docRef","posts","docId","update","catch","err","first_name","last_name","email","password","password_confirm","inputError","authInfo","show_module_signIn","signIn","signUp","validateEmail","test","signUp_error","show_module_signUp","overflow","closeAuthModule","htmlFor","show_signUp","show_signIn","createUserWithEmailAndPassword","signInWithEmailAndPassword","PageNotFound","Footer","App","layout_Navbar","AuthModule","exact","path","component","layout_Footer","Boolean","location","hostname","storyStateReducer","arguments","objectSpread","initState","storyReducer","storyInfo","comments","addedComment","reactionReducer","bookmark","bookmarked","signIn_error","authReducer","message","navReducer","rootReducer","combineReducers","navReducers","commentReducer","reactionsReducer","firestoreReducer","firebaseReducer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","store","createStore","applyMiddleware","thunk","withExtraArgument","reduxFirestore","fbConfig","reactReduxFirebase","useFirestoreForProfile","userProfile","attachAuthIsReady","firebaseAuthIsReady","ReactDOM","render","es","src_App","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.6e050abe.chunk.js","sourcesContent":["import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { NavLink } from 'react-router-dom'\r\nimport {connect} from 'react-redux'\r\nimport { compose } from 'redux'\r\nimport { firestoreConnect } from 'react-redux-firebase'\r\nimport { toggleMobileNav, resetView, openFullNav, closeFullNav, toggleFullNav } from '../../store/actions/navActions'\r\n\r\nconst Navbar = (props) => {\r\n    const {auth, nav, Ids, profileData} = props; \r\n    const mobile_nav = nav.mobileToggled ? 'mobile_nav' : 'mobile_nav-noDisplay';\r\n    const toggle_mobile_nav = nav.mobileToggled ? 'animate' : '' \r\n    return (\r\n        // Nav Container.\r\n        <nav className=\"nav\">\r\n            <div className=\"top_section\">\r\n                <div className=\"top_section_items\">\r\n                    <div className=\"logo_container left\">\r\n                        <div className=\"logo\">\r\n                            <Link to='/'><h2>CHRONA</h2></Link>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"top_section_item right connect\">\r\n                        <div className=\"socials\">\r\n                            <div className=\"social_icons\">\r\n                                <div className=\"social_icon\"><i class=\"fab fa-twitter\"></i></div>\r\n                                <div className=\"social_icon\"><i class=\"fab fa-linkedin\"></i></div>\r\n                                <div className=\"social_icon\"><i class=\"fab fa-github\"></i></div>\r\n                                <div className=\"social_icon\"><i class=\"far fa-envelope\"></i></div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            {/* Move this below the hero and above the main body container */}\r\n            {/* <div className=\"topic_container\">\r\n                <div className=\"topic_button\">\r\n                    <div className=\"btn-flat\">\r\n                        <h4>Topics <i class=\"fas fa-caret-down\"></i></h4>\r\n                    </div>\r\n                </div>\r\n            </div> */}\r\n        </nav>\r\n    )\r\n    \r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        toggleMobileNav: () => dispatch(toggleMobileNav()),\r\n        resetView: () => dispatch(resetView()),\r\n        openFullNav: () => dispatch(openFullNav()),\r\n        closeFullNav: () => dispatch(closeFullNav()),\r\n        toggleFullNav: () => dispatch(toggleFullNav()),\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    return {\r\n        auth: state.firebase.auth,\r\n        nav: state.nav,\r\n        Ids: state.firestore.data.Ids,\r\n        data: state.firestore.data,\r\n        profileData: state.firebase.profile\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    firestoreConnect([\r\n        { collection: 'Ids' }\r\n    ])\r\n)(Navbar)","export const toggleMobileNav = () => {\r\n    return(dispatch, getstate) => {\r\n        dispatch({ type: 'MOBILE_NAV_TOGGLED'});\r\n    }\r\n}\r\n\r\nexport const resetView = () => {\r\n    return (dispatch, getstate) => {\r\n        dispatch({ type: 'MOBILE_NAV_RESET' });\r\n    }\r\n}\r\n\r\nexport const paginate = (val) => {\r\n    return (dispatch, getstate) => {\r\n        dispatch({type: 'PAGINATE'}, val);\r\n    }\r\n}\r\n\r\nexport const openFullNav = () => {\r\n    return (dispatch) => {\r\n        dispatch({type:'OPEN_FULL_NAV'});\r\n    }\r\n}\r\n\r\nexport const closeFullNav = () => {\r\n    return (dispatch) => {\r\n        dispatch({ type: 'CLOSE_FULL_NAV' });\r\n    }\r\n}\r\n\r\nexport const toggleFullNav = () => {\r\n    return (dispatch) => {\r\n        dispatch({ type: 'TOGGLE_FULL_NAV' });\r\n    }\r\n}","import React from 'react'\r\n\r\nfunction sortTime(time) {\r\n    if (time.length > 5) {\r\n        return time;\r\n    }\r\n    var curr_time = new Date().getTime();\r\n    var time_diff = (((curr_time - time) / 1000) / 60).toFixed(0);\r\n    if ((time_diff / 60) >= 24) {\r\n        time = ((time_diff / 60) / 24).toFixed(0) + \"d\";\r\n    } else if (time_diff >= 60) {\r\n        time = (time_diff / 60).toFixed(0) + \"h\";\r\n    } else {\r\n        time = time_diff + \"m\";\r\n    }\r\n    return time;\r\n}\r\n\r\nfunction TimePosted(props) {\r\n    const { time } = props;\r\n    return (\r\n        <h4>December 6th, 2019 </h4>\r\n    )\r\n}\r\n\r\nexport default TimePosted","export const updateReaction = (reaction) => {\r\n    return (dispatch, getState, { getFirebase, getFirestore }) => {\r\n        // make async call to database\r\n        const firebase = getFirebase();\r\n        const firestore = getFirestore();\r\n        const user = firebase.auth().currentUser;\r\n        // const userCollection = firestore.collection('users').doc(user.uid);\r\n        let type = reaction.type[0];\r\n\r\n        // const isLiked = likeExists(postsLiked, reaction.id, type);\r\n        // if (!isLiked) {\r\n        //     pushData(reaction.id, type);\r\n        // } else {\r\n        //     postsLiked.splice(isLiked, 1)\r\n        //     likeAmt = -1;\r\n        // }\r\n        // userCollection.set({\r\n        //     [reaction.id]: {\r\n        //         reaction: {\r\n        //             [type]: {\r\n        //                 liked: false\r\n        //             }\r\n        //         }\r\n        //     }\r\n        // }, { merge: true })\r\n        // const reactionType = reaction.userData.reactions[reaction.id] ? reaction.userData.reactions[reaction.id].reaction : undefined;\r\n        // const reactionState = reactionType ? reaction.userData.reactions[reaction.id].reaction[type] : false;\r\n        // let likeAmt = 1;\r\n        // let liked = updateUserReactionData({ firestore, firebase }, user.uid, reaction.id, type, (reactionState ? reactionState.liked : false));\r\n        // likeAmt = liked ? -1 : 1;\r\n        // incrementReaction({firebase, firestore}, reaction.id, type, likeAmt);\r\n        \r\n        let liked = updateUserReactionData({ firestore, firebase }, user.uid, reaction.docID, type, (reaction.userData.reactions === null) ? false : ((reaction.userData.reactions[type] === undefined) ? false : reaction.userData.reactions[type].liked));\r\n        let likeAmt = liked ? -1 : 1;\r\n        incrementReaction({ firebase, firestore }, reaction.docID, type, likeAmt);\r\n\r\n        // if(!reaction) {\r\n        //     firestore.collection('users').doc(user.uid).set({\r\n        //         reactions: {\r\n        //             [type]: {\r\n        //                 liked: true\r\n        //             }\r\n        //         }\r\n        //     })\r\n        // }\r\n        // firestore.collection('users').doc(user.uid).set({\r\n        //     reactions: {\r\n        //         [type]: {\r\n        //             liked: \r\n        //         }\r\n        //     }\r\n        // })\r\n        // firestore.collection('stories').doc(reaction.id).set({\r\n        //     reactions: {\r\n        //         [type]: {\r\n        //             total: firebase.firestore.FieldValue.increment(likeAmt),\r\n        //         },\r\n        //     }\r\n        // }, { merge: true })\r\n        // pushData(reaction.id, type);\r\n        \r\n    }\r\n}\r\n\r\n\r\nconst updateUserReactionData = (data, uid, id, type, action) => {\r\n    const {firestore} = data;\r\n    firestore.collection('users').doc(uid).set({\r\n        [id]: {\r\n            reaction: {\r\n                [type]: {\r\n                    liked: !action\r\n                }\r\n            }\r\n        }\r\n    }, {merge: true})\r\n    return action\r\n}\r\n\r\nconst incrementReaction = (data, id, type, likeAmt) => {\r\n    const {firebase, firestore} = data;\r\n    firestore.collection('stories').doc(id).set({\r\n        reactions: {\r\n            [type]: {\r\n                total: firebase.firestore.FieldValue.increment(likeAmt),\r\n            },\r\n        }\r\n    }, { merge: true })\r\n}\r\n\r\nexport const updateBookmark = (bookmark) => {\r\n    return (dispatch, getState, { getFirebase, getFirestore }) => {\r\n        // make async call to database\r\n        const firebase = getFirebase();\r\n        const firestore = getFirestore();\r\n        const user = firebase.auth().currentUser;\r\n        const {story} = bookmark\r\n        // const userCollection = firestore.collection('users').doc(user.uid);\r\n        let bookmarked = updateUserBookmarkData({ firestore, firebase }, user.uid, story, (bookmark.userData.profile === null) ? false : ((bookmark.userData.profile.bookmarked === undefined) ? false : bookmark.userData.profile.bookmarked));\r\n        // return 0;\r\n        if(bookmarked){\r\n            let removed = removeBookmark({ firebase, firestore }, user.uid, story);\r\n            if(removed){\r\n                dispatch({\r\n                    type: \"REMOVED_BOOKMARK\",\r\n                    bookmark: {\r\n                        id: story.id,\r\n                        bookmarked: false\r\n                    }\r\n                })\r\n            }\r\n        } else {\r\n            let added = addBookmark({ firebase, firestore }, user.uid, story);\r\n            if(added) {\r\n                dispatch({\r\n                    type: \"ADDED_BOOKMARK\",\r\n                    bookmark: {\r\n                        id: story.id,\r\n                        bookmarked: true\r\n                    }\r\n                })\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nconst updateUserBookmarkData = (data, uid, story, action) => {\r\n    const { firestore } = data;\r\n    firestore.collection('users').doc(uid).set({\r\n        [story.id]: {\r\n            bookmarked: !action\r\n        }\r\n    }, { merge: true })\r\n    \r\n    return action\r\n}\r\n\r\nconst addBookmark = (data, uid, story) => {\r\n    const { firestore } = data;\r\n    const userBookmarkCollection = firestore.collection('users').doc(uid).collection('bookmarks');\r\n    userBookmarkCollection.doc(story.id).set({\r\n        bookmarkedStory: story\r\n    }).then(() => {\r\n        return true;\r\n    }).catch(() => {\r\n        return false;\r\n    })\r\n}\r\n\r\nconst removeBookmark = (data, uid, story) => {\r\n    const { firestore } = data;\r\n    firestore.collection('users').doc(uid).collection('bookmarks').doc(story.id).delete().then(() => {\r\n        return true;\r\n    }).catch((error) => {\r\n        return false;\r\n    })\r\n}","import React, { Component } from 'react'\r\nimport { updateReaction } from '../../store/actions/reactionAction'\r\nimport { connect } from 'react-redux'\r\nimport { showAuthModule } from '../../store/actions/authActions'\r\n\r\nclass Reactions extends Component {\r\n    state = {\r\n        thumb: {\r\n            highlighted: false,\r\n            className: 'far fa-thumbs-up icon',\r\n        },\r\n        firstLoad: false\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { auth } = this.props;\r\n        if (!auth.uid) {\r\n            return;\r\n        }\r\n        this.setHighlight('thumb');\r\n        this.setState({\r\n            firstLoad: true\r\n        })\r\n    }\r\n\r\n    setHighlight = (id) => {\r\n        // const reactionType = this.props.profile[this.props.reactions.docID] ? this.props.profile[this.props.reactions.docID].reaction : undefined;\r\n        // const liked = reactionType ? this.props.profile[this.props.reactions.docID].reaction[id] : undefined;\r\n        const { profile } = this.props.reactions;\r\n        if (profile === null) { return 0 }\r\n        if (profile[id] === undefined) { return 0 }\r\n        let className = profile[id].liked ? 'fas fa-thumbs-up icon highlighted' : 'far fa-thumbs-up icon'; //If the like does not exist set to false\r\n        this.setState({\r\n            [id]: {\r\n                highlighted: profile[id].liked,\r\n                className: className\r\n            }\r\n        })\r\n    }\r\n\r\n    toggleReaction = (e) => {\r\n        const { auth } = this.props;\r\n        if (!auth.uid) {\r\n            return;\r\n        }\r\n        var liked = !this.state[e.target.id].highlighted;\r\n        let className = liked ? 'fas fa-thumbs-up icon highlighted' : 'far fa-thumbs-up icon';\r\n        this.setState({\r\n            [e.target.id]: {\r\n                highlighted: liked,\r\n                className: className\r\n            }\r\n        })\r\n    }\r\n\r\n    updateLikes = (e) => {\r\n        const { auth } = this.props;\r\n        const { id, profile, reactions } = this.props.reactions;\r\n        if (!auth.uid) { this.props.showAuthModule(); return; }\r\n        // if (profile === null) { return 0 }\r\n        // if (profile[id] === undefined) { return 0 }\r\n        const { total } = reactions[e.target.id];\r\n        let reactionData = {\r\n            docID: id,\r\n            type: [e.target.id],\r\n            val: total,\r\n            userData: {\r\n                reactions: profile\r\n            }\r\n        }\r\n        this.toggleReaction(e);\r\n        this.props.updateReaction(reactionData);\r\n    }\r\n\r\n    render() {\r\n        const { id, profile, reactions } = this.props.reactions;\r\n        return (\r\n            <div className=\"reaction icon_container noselect\">\r\n                <i id=\"thumb\" className={this.state.thumb.className} onClick={this.updateLikes}> <span id=\"thumb\">{reactions.thumb.total}</span></i>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        updateReaction: (reaction) => dispatch(updateReaction(reaction)),\r\n        showAuthModule: () => dispatch(showAuthModule())\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        auth: state.firebase.auth,\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Reactions)","export const scrollToTop = (set) => {\r\n    const c = document.documentElement.scrollTop || document.body.scrollTop;\r\n    if (c > 0) {\r\n        window.requestAnimationFrame(scrollToTop);\r\n        window.scrollTo(0, c - c / 2);\r\n    }\r\n};","export const signIn = (authInfo) => {\r\n    return (dispatch, getState, {getFirebase, getFirestore}) => {\r\n        const  firebase = getFirebase();\r\n        const firestore = getFirestore();\r\n        const auth = firebase.auth();\r\n        auth.signInWithEmailAndPassword(authInfo.email, authInfo.password).then(() => {\r\n            dispatch({ type: 'LOGIN_SUCCESS' })\r\n        }).catch((err) => {\r\n            dispatch({ type: 'LOGIN_ERROR' }, err)\r\n        })\r\n    }\r\n}\r\n\r\nexport const signUp = (authInfo) => {\r\n    return (dispatch, getState, { getFirebase, getFirestore}) => {\r\n        const firebase = getFirebase();\r\n        const firestore = getFirestore();\r\n        const auth = firebase.auth();\r\n\r\n        auth.createUserWithEmailAndPassword(authInfo.email, authInfo.password).then(() => {\r\n            const user = firebase.auth().currentUser;\r\n            firestore.collection('users').doc(user.uid).set({\r\n                first_name: authInfo.first_name,\r\n                last_name: authInfo.last_name\r\n            })\r\n            dispatch({ type: 'SIGNUP_SUCCESSFUL' })\r\n        }).catch((err) => {\r\n            dispatch({ type: 'SIGNUP_ERROR', err: err })\r\n        })\r\n    }\r\n}\r\n\r\nexport const signOut = () => {\r\n    return (dispatch, getState, {getFirebase}) => {\r\n        const firebase = getFirebase();\r\n        firebase.auth().signOut().then(() => {\r\n            dispatch({type: 'LOGOUT_SUCCESS'})\r\n        }).catch((err) => {\r\n            dispatch({type: 'LOGOUT_ERROR'})\r\n        })\r\n    }\r\n}\r\n\r\nexport const changeName = (newName) => {\r\n    return (dispatch, getState, { getFirebase, getFirestore }) => {\r\n        const firestore = getFirestore();\r\n        const firebase = getFirebase();\r\n        const user = firebase.auth().currentUser;\r\n        \r\n        firestore.collection('users').doc(user.uid).set({\r\n            first_name: newName.first_name,\r\n            last_name: newName.last_name\r\n        }, { merge: true })\r\n    }\r\n}\r\n\r\nexport const showAuthModule = () => {\r\n    return (dispatch, getState) => {\r\n        dispatch({type: 'SHOW_SIGNUP_MODULE'});\r\n    }\r\n}\r\n\r\nexport const showSignInModule = () => {\r\n    return (dispatch, getState) => {\r\n        dispatch({ type: 'SHOW_SIGNIN_MODULE' });\r\n    }\r\n}\r\n\r\nexport const closeAuthModule = () => {\r\n    return (dispatch, getState) => {\r\n        dispatch({ type: 'CLOSE_MODULE' });\r\n    }\r\n}","import React from 'react'\r\nimport { Link } from 'react-router-dom' \r\nimport TimePosted from '../miniComponents/TimePosted'\r\nimport StoryActions from '../miniComponents/StoryActions'\r\nimport { scrollToTop } from '../miniComponents/scrollToTop'\r\nimport { connect } from 'react-redux'\r\n\r\nconst StorySummary = (props) => {\r\n    const { story } = props;\r\n    let reactionProps = {\r\n        reactions: story.reactions,\r\n        id: story.id,\r\n        profile: ((props.profile ? props.profile.reaction : null) ? props.profile.reaction : null)\r\n    }\r\n\r\n    let bookmarkProps = {\r\n        story: story,\r\n        profile: ((props.profile) ? props.profile : null)\r\n    }\r\n\r\n    let trunc_text = (text) => {\r\n        let maxLen = 200;\r\n        maxLen = (text.length < maxLen) ? text.length : maxLen;\r\n\r\n        return text.substring(0, maxLen);\r\n    }    \r\n\r\n    let banned = props.profile ? props.profile.banned : false;\r\n    return (\r\n        <div className=\"my_post main_page_article\">\r\n            <div className=\"image_container\">\r\n                <img src=\"\" alt=\"\"/>\r\n            </div>\r\n\r\n            <div className=\"post_info\">\r\n                <div className=\"post_blurb\">\r\n                    <div className=\"blurb\">\r\n                        <div className=\"author meta\">\r\n                            <h4>By: OlaKunle Lawal</h4>\r\n                        </div>\r\n                        <h2>Recreational Powers</h2>\r\n                        {/* <h4>This might be the new age.</h4> */}\r\n                        <br/>\r\n                        <div className=\"post_meta\">\r\n                            <TimePosted time={1562813777423}/>\r\n                            <div className=\"metas\">\r\n                                <div className=\"actions meta\">\r\n                                    <div className=\"totalComments icon_container action\">\r\n                                        <i className=\"far fa-comment icon\"><span>{story.commentsTotal}</span></i>\r\n                                    </div>\r\n                                    <div className=\"views icon_container noselect action\">\r\n                                        <i id=\"views\" className=\"far fa-eye icon\"><span id=\"views\">{story.views}</span></i>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    return {\r\n        auth: state.firebase.auth,\r\n        profile: state.firebase.profile[ownProps.story.id],\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(StorySummary)\r\n\r\n/*{ < div className = \"totalComments\" >\r\n        <h4>{story.commentsTotal === 1 ? (story.commentsTotal + ' Comment') : (story.commentsTotal + ' Comments')}</h4>\r\n                    </div >\r\n\r\n    <Reactions reactions={reactionProps} /> } */","import React from 'react'\r\nimport StorySummary from './StorySummary';\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst StoryList = ({stories}) => {\r\n    return (\r\n        <div className=\"main_body\">\r\n            <div className=\"my_post_container\">\r\n                {stories && stories.map(story => {\r\n                    return (\r\n                        <Link to=\"/post/NpcRaVOb0zzpJotChOp0\"><StorySummary story={story} key={story.id} /></Link>\r\n                    )\r\n                })}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default StoryList","import React, {Component} from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport {connect} from 'react-redux'\r\nimport { paginate } from '../../store/actions/navActions'\r\nimport { scrollToTop } from '../miniComponents/scrollToTop'\r\n\r\nclass Pagination extends Component {\r\n    state = {\r\n        paginationList: [1],\r\n        resetDone: false,\r\n    }\r\n\r\n    resetList = (e) => {\r\n        const { totalStories, limit, currentPage } = this.props.paginateProp;\r\n        const totalPages = Math.round(totalStories / limit); //Total possible pages based on total stories//\r\n        const _CurrentPage = (e) ? e.target.id : currentPage; //The current page//\r\n        const maxItem = 4; //Maximum pagination values that can show up minus 1//\r\n        let startVal = ((_CurrentPage) <= 1) ? 1 : _CurrentPage - 1;\r\n        let endVal = ((Number(startVal) + maxItem) > totalPages) ? totalPages : (Number(startVal) + maxItem);\r\n        if ((totalPages - startVal) < 5 && _CurrentPage > 1) {\r\n            startVal = endVal - maxItem;\r\n        }\r\n        let paginationList = [];\r\n        for (var i = ((startVal <= 1) ? 1 : startVal); i <= endVal; i++) {\r\n            paginationList.push(i);\r\n        }\r\n        this.setState({\r\n            paginationList: paginationList,\r\n            resetDone: true\r\n        })\r\n        scrollToTop();\r\n    }\r\n\r\n    componentWillMount() {\r\n        if(this.state.resetDone){return 0}\r\n        this.resetList();\r\n    }\r\n\r\n    render() {\r\n        const { totalStories, currentPage, limit, pageType } = this.props.paginateProp;\r\n        const totalPages = Math.round(totalStories / limit);\r\n        return (\r\n            <div className='pagination_container center'>\r\n                <ul className=\"pagination\">\r\n                    <li className={(currentPage > 1) ? \"waves-effect enabled\" : \"disabled\"} onClick={this.resetList}><Link to={\"/\" + pageType + '/1'}><i className=\"fas fa-angle-double-left\"></i></Link></li>\r\n                    {this.state.paginationList.map((item, index) => {\r\n                        return (\r\n                            <li id={item} className={(currentPage === item) ? \"waves-effect current_page\" : \"waves-effect\"} key={index}><Link to={\"/\" + pageType + \"/\" + (item)} id={item} onClick={this.resetList} >{item}</Link></li>\r\n                        )\r\n                    })}\r\n                    <li className={(currentPage < totalPages) ? \"waves-effect enabled\" : \"disabled\"} onClick={this.resetList}><Link to={\"/\" + pageType + '/' + totalPages}><i className=\"fas fa-angle-double-right\"></i></Link></li>\r\n                </ul>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n   return {\r\n       \r\n   }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    return {\r\n        \r\n    }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Pagination)","import React from 'react'\r\n\r\nconst FeaturedPost = (props) => {\r\n    return (\r\n        <>\r\n            <div className=\"featured_post\">\r\n                <div className=\"featured_post_image\">\r\n                    <img src=\"\" alt=\"\"/>\r\n                </div>\r\n                <div className=\"featured_post_info\">\r\n                    <header>\r\n                        <h1 className=\"featured_post_info_title\">Blog can be everything nowadays</h1>\r\n                        <div className=\"featured_post_info_description\">\r\n                            <p>Lorem ipsum dolor sit amet consectetur,\r\n                                adipisicing elit. Dolores possimus culpa\r\n                                officiis sed autem saepe aspernatur id ad,\r\n                                doloremque quod recusandae dolor doloribus\r\n                            nobis. Illum labore fugiat harum eos ab?</p>\r\n                        </div>\r\n                    </header>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"featured_post_arrow\">\r\n                <i class=\"fas fa-arrow-left\"></i>\r\n                <i class=\"fas fa-arrow-right\"></i>\r\n            </div>\r\n        </>\r\n    )\r\n} \r\n\r\nexport default FeaturedPost","import React from 'react'\r\nimport TimePosted from '../miniComponents/TimePosted'\r\n\r\nconst postList = () => {\r\n    return (\r\n        <div className=\"my_post\">\r\n            <div className=\"image_container\">\r\n                <img src=\"\" alt=\"\" />\r\n            </div>\r\n\r\n            <div className=\"post_info\">\r\n                <div className=\"post_blurb\">\r\n                    <div className=\"blurb\">\r\n                        <h2>How to view section C on rite</h2>\r\n                        {/* <h4>This might be the new age.</h4> */}\r\n                        <br />\r\n                        <div className=\"post_meta\">\r\n                            <TimePosted time={1562813777423} />\r\n                            <div className=\"metas\">\r\n                                <div className=\"actions meta\">\r\n                                    <div className=\"totalComments icon_container action\">\r\n                                        <i className=\"far fa-comment icon\"><span>{100}</span></i>\r\n                                    </div>\r\n                                    <div className=\"views icon_container noselect action\">\r\n                                        <i id=\"views\" className=\"far fa-eye icon\"><span id=\"views\">{1000}</span></i>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const ThreeUp = (props) => {\r\n    return (\r\n        <div className=\"post_container\">\r\n            <div className=\"three_up\">\r\n                {postList()}\r\n                {postList()}\r\n                {postList()}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const TwoUp = (props) => {\r\n    return (\r\n        <div className=\"post_container\">\r\n            <div className=\"two_up\">\r\n                {postList()}\r\n                {postList()}\r\n            </div>\r\n        </div>\r\n    )\r\n}","//Hero space will include latest post/featured posts. As well as top 3 posts. \r\n\r\nimport React, {Component} from 'react'\r\nimport FeaturedPost from './FeaturedPost'\r\nimport {ThreeUp} from './ThreeUp'\r\nimport { Link } from 'react-router-dom'\r\n\r\n\r\nclass HeroSpace extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"hero\">\r\n                <FeaturedPost/>\r\n                <div className=\"recent_post\">\r\n                    <Link to=\"/post/NpcRaVOb0zzpJotChOp0\"><ThreeUp /></Link>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default HeroSpace","import React, { Component } from 'react'\r\nimport { Redirect } from 'react-router-dom'\r\nimport StoryList from '../stories/StoriesList'\r\nimport Pagination from './Pagination'\r\nimport DashboardTemplate from './DashboardTemplate'\r\nimport HeroSpace from './HeroSpace'\r\nimport { scrollToT } from '../miniComponents/scrollToTop'\r\nimport { connect } from 'react-redux'\r\nimport { firestoreConnect } from 'react-redux-firebase';\r\nimport { compose } from 'redux'\r\nimport {resetView } from '../../store/actions/navActions'\r\n\r\n\r\n//DISCLAIMER ADDING ANOTHER STATE CHANGE WILL BREAK THE WAY REFRESHING THE PAGE WORKS.//\r\nclass Dashboard extends Component {\r\n    state = {\r\n        firstLoad: false,\r\n        prevPage: 1\r\n    }\r\n    \r\n    sameStoryIds = false\r\n    // loadType = 'none'\r\n\r\n    changePage = () => {\r\n        this.setState({\r\n            startAt: this.state.startAt + 1,\r\n            endAt: this.state.endAt + 1\r\n        })\r\n    }\r\n\r\n    componentDidMount() {\r\n        // const {stories } = this.props;\r\n        if (isNaN(this.props.match.params.id) && (this.props.match.params.id !== undefined)){return 0}\r\n        var timeoutId = window.setTimeout(() => {\r\n            this.setState({\r\n                firstLoad: true,\r\n                prevPage: Number(this.props.match.params.id)\r\n            })\r\n            this.loadType = 'first';\r\n        }, 1000);\r\n        this.setState({timeoutId: timeoutId})\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        // use intervalId from the state to clear the interval\r\n        clearInterval(this.state.timeoutId);\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        const { stories, currentPage } = this.props;\r\n        const prevStory = prevProps.stories ? prevProps.stories : [];\r\n        let currPage = isNaN(currentPage) ? 1 : currentPage;\r\n        //IF NEW PREVIOUS PAGE IS THE NEW CURRENT PAGE THEN WE ARE GOLDEN//\r\n\r\n        if ((Number(currPage) === Number(this.state.prevPage)) || currentPage === undefined) {\r\n            return 0;\r\n        }\r\n        if (prevStory.length > 0 && this.state.firstLoad) {\r\n            if (prevProps.stories[0].id === stories[0].id) {\r\n                this.sameStoryIds = true;\r\n\r\n            } else {\r\n                this.sameStoryIds = false\r\n                this.setState({\r\n                    prevPage: currentPage\r\n                })\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { nav, stories, auth } = this.props;\r\n        // let filteredStories = (stories) ? (stories.filter((story) => {\r\n        //     return !(this.props.banList.includes(story.userID))\r\n        // })) : [];\r\n        let filteredStories = (stories) ? stories : [];\r\n        let paginationState = {\r\n            totalStories: this.props.totalStories,\r\n            currentPage: Number(this.props.currentPage) || 1,\r\n            limit: this.props.limit,\r\n            pageType: 'page'\r\n        }\r\n        if (isNaN(this.props.match.params.id) && (this.props.match.params.id !== undefined)) {\r\n            return <Redirect to='/404' />\r\n        } else if (!nav.mobileToggled) {\r\n            return (\r\n                <div id=\"main_body_container\" className=\"main_body_container\">\r\n                    <HeroSpace stories={filteredStories}/>\r\n                    <StoryList stories={filteredStories} />\r\n                    {/* {(this.props.totalStories > 0) ? <Pagination paginateProp={paginationState}/> : null} */}\r\n                </div>\r\n            )\r\n        } else {\r\n            return (\r\n                null\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        resetView: () => dispatch(resetView()),\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    return {\r\n        stories: state.firestore.ordered.stories,\r\n        totalStories: state.firestore.data.Ids ? state.firestore.data.Ids.postIds.totalIds : 0,\r\n        banList: state.firebase.profile.banList || [],\r\n        currentPage: ownProps.match.params.id,\r\n        nav: state.nav,\r\n        auth: state.firebase.auth,\r\n        limit: 8\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    firestoreConnect((props, dispatch) => [\r\n        (props.totalStories <= 0 && (props.match.url === '/' || props.match.params.id === '1')) ? { collection: 'stories', orderBy: ['postID', 'desc'], limit: props.limit } : { collection: 'stories', orderBy: ['postID', 'desc'], startAt: ((props.totalStories - (props.limit * (props.match.params.id - 1))) <= 0) ? -1 : (props.totalStories - (props.limit * (props.match.params.id - 1))) - 1, limit: props.limit}\r\n    ])\r\n)(Dashboard)\r\n\r\n// endAt: ((props.totalStories - (props.limit * (props.match.params.id))) <= 0) ? 0 : (props.totalStories - (props.limit * (props.match.params.id))) - 1\r\n    // (true) ? { collection: 'stories', orderBy: ['postID', 'desc'], limit: 10 } : { collection: 'stories', orderBy: ['postID', 'desc'], startAt: ((props.totalStories - (10 * (props.match.params.id - 1))), endAt: ((props.totalStories - (10 * (props.match.params.id - 1))) > 10) ? (props.totalStories - (10 * props.match.params.id)) : 0 }\r\n// <Pagination paginationState={paginationState} />","import React, { Component } from 'react'\r\nimport StoryList from '../stories/StoriesList'\r\nimport { Link } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport { firestoreConnect } from 'react-redux-firebase';\r\nimport { compose } from 'redux'\r\nimport { toggleMobileNav, resetView } from '../../store/actions/navActions'\r\nimport {Redirect} from 'react-router-dom'\r\nimport { loadMore } from '../../store/actions/storyAction'\r\n\r\nclass Topic extends Component {\r\n    state = {\r\n        scrolled: false,\r\n        startAtOffset: 0\r\n    }\r\n\r\n    changePage = () => {\r\n        this.setState({\r\n            startAt: this.state.startAt + 1,\r\n            endAt: this.state.endAt + 1\r\n        })\r\n    }\r\n\r\n    componentDidMount() {\r\n        // window.setTimeout(() => {\r\n        if (this.props.loaded) { return 0 }\r\n        // }, 100);\r\n    }\r\n\r\n    render() {\r\n        const { nav, stories, auth } = this.props;\r\n        // const pageId = 1; //(this.props.match.params.id ? this.props.match.params.id : 1)\r\n        let filteredStories = (stories) ? (stories.filter((story) => {\r\n            return !(this.props.banList.includes(story.userID))\r\n        })) : [];\r\n\r\n        if(!auth.uid) return <Redirect to='/welcome'/>\r\n\r\n        if (!nav.mobileToggled) {\r\n            if (stories) {\r\n                if(stories.length > 0) {\r\n                    return (\r\n                        <div id=\"main_body_container\" className=\"main_body_container\">\r\n                            <StoryList stories={filteredStories} />\r\n                            <div className=\"load_more_container center\">\r\n                                <div className=\"btn btn-flat quicksand wave-effect\" onClick={this.props.loadMore}>Load More</div>\r\n                            </div>\r\n                        </div>\r\n                    )\r\n                } else {\r\n                    return (\r\n                        <div id=\"main_body_container\" className=\"main_body_container\">\r\n                            <div className=\"center container no_topics\">\r\n                                <h2 className=\"\">No <span className=\"red-text\">{this.props.topic}</span> topics yet.</h2>\r\n                                <Link to={'/create'}>\r\n                                    <div className=\"create_topic\">\r\n                                            <div className=\"btn btn-flat quicksand wave-effect\">Create One</div>\r\n                                    </div>\r\n                                </Link>\r\n                            </div>\r\n                        </div>\r\n                    )\r\n                }\r\n            } else {\r\n                return (\r\n                    <div className=\"main_body_container\">\r\n                        <div className=\"center container\">\r\n                            <h2 className=\"red-text\">Loading</h2>\r\n                        </div>\r\n                    </div>\r\n                )\r\n            }\r\n        } else {\r\n            return (\r\n                null\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        toggleMobileNav: () => dispatch(toggleMobileNav()),\r\n        resetView: () => dispatch(resetView()),\r\n        loadMore: () => dispatch(loadMore())\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    return {\r\n        stories: state.firestore.ordered.stories,\r\n        topic: ownProps.match.params.id,\r\n        limit: state.stories.topic_limit,\r\n        loaded: state.stories.loaded,\r\n        banList: state.firebase.profile.banList || [],\r\n        nav: state.nav,\r\n        auth: state.firebase.auth,\r\n    }\r\n}\r\n// firestoreConnect((ownProps) => [\r\n//     {\r\n//         collection: 'stories/' + ownProps.storyId + '/comments',\r\n//         orderBy: ['time', 'desc']\r\n//     }\r\n// ])\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    firestoreConnect((ownProps, dispatch) => [\r\n        { collection: 'stories', where: ['topic', '==' , ownProps.match.params.id], orderBy: ['time', 'desc'], limit: ownProps.limit }\r\n    ])\r\n)(Topic)","export const appendStories = (queryParam) => {\r\n    return (dispatch, getState, { getFirebase, getFirestore }) => {\r\n        const firestore = getFirestore();\r\n        const firebase = getFirebase();\r\n        let totalStories;\r\n        firestore.collection('Ids').doc('postIds').get().then((snapShot) => {\r\n            // dispatch({ type: 'APPEND_STORY' })\r\n            totalStories = snapShot.data().totalIds;\r\n            dispatch({ \r\n                type: 'APPEND_STORY',\r\n                storyInfo: {\r\n                    totalStories: totalStories,\r\n                } \r\n            })\r\n        })\r\n    }\r\n}\r\n\r\nexport const appendTopics = () => {\r\n    return (dispatch, getState, { getFirebase, getFirestore }) => {\r\n        const firestore = getFirestore();\r\n        let totalStories;\r\n        firestore.collection('Ids').doc('postIds').get().then((snapShot) => {\r\n            // dispatch({ type: 'APPEND_STORY' })\r\n            totalStories = snapShot.data().totalIds;\r\n            dispatch({\r\n                type: 'APPEND_TOPIC',\r\n                storyInfo: {\r\n                    totalStories: totalStories,\r\n                }\r\n            })\r\n        })\r\n    }\r\n}\r\n\r\nexport const loadMore = () => {\r\n    return (dispatch, getState, { getFirebase, getFirestore }) => {\r\n        dispatch({type: 'LOAD_MORE'})\r\n    }\r\n}","//Hero space will include latest post/featured posts. As well as top 3 posts. \r\n\r\nimport React, { Component } from 'react'\r\nimport TimePosted from '../../miniComponents/TimePosted'\r\n\r\nconst HeroSpace = () => {\r\n    return (\r\n        <div className=\"post_hero\">\r\n            <div className=\"post_byline\">\r\n                <div className=\"post_title post_item\">\r\n                    <h1>There are places we need to go</h1>\r\n                </div>\r\n\r\n                <div className=\"post_meta post_item\">\r\n                    <div className=\"metas\">\r\n                        <h4>December 6th, 2019</h4>\r\n                        <div className=\"actions meta\">\r\n                            <div className=\"totalComments icon_container action\">\r\n                                <i className=\"far fa-comment icon\"><span>{88}</span></i>\r\n                            </div>\r\n                            <div className=\"views icon_container noselect action\">\r\n                                <i id=\"views\" className=\"far fa-eye icon\"><span id=\"views\">{100}</span></i>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"author post_item\">\r\n                    <h4>By - Adam Lavine</h4>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HeroSpace","import React, { Component } from 'react'\r\n\r\nclass PostContent extends Component {\r\n    state = {\r\n\r\n    }\r\n\r\n    render() {\r\n        let width = { width: 'calc((100% - 16px)/ 3)' };\r\n        return (\r\n            <div className=\"post_content\">\r\n                <p className=\"content\">\r\n                    Lorem ipsum, dolor sit amet consectetur adipisicing elit. \r\n                    Consectetur velit iure numquam exercitationem \r\n                    hic quibusdam esse atque, \r\n                    nulla facilis odio distinctio \r\n                    perferendis laboriosam minus sunt voluptates amet, ullam at quo.\r\n                </p>\r\n\r\n                <p className=\"content\">\r\n                    Lorem ipsum, dolor sit amet consectetur adipisicing elit.\r\n                    Consectetur velit iure numquam exercitationem\r\n                    hic quibusdam esse atque,\r\n                    nulla facilis odio distinctio\r\n                    perferendis laboriosam minus sunt voluptates amet, ullam at quo.\r\n                </p>\r\n\r\n                <div className=\"image_list\">\r\n                    <h3>Gallary photos</h3>\r\n                    <ul class=\"three\">\r\n                        <li style={width}><img src=\"\" alt=\"\" /></li>\r\n                        <li style={width}><img src=\"\" alt=\"\" /></li>\r\n                        <li style={width}><img src=\"\" alt=\"\" /></li>\r\n                    </ul>\r\n                </div>\r\n\r\n                <h3>This might be where we are today</h3>\r\n                <p className=\"content\">\r\n                    Lorem ipsum, dolor sit amet consectetur adipisicing elit.\r\n                    Consectetur velit iure numquam exercitationem\r\n                    hic quibusdam esse atque,\r\n                    nulla facilis odio distinctio\r\n                    perferendis laboriosam minus sunt voluptates amet, ullam at quo.\r\n                </p>\r\n\r\n                <p className=\"content\">\r\n                    Lorem ipsum, dolor sit amet consectetur adipisicing elit.\r\n                    Consectetur velit iure numquam exercitationem\r\n                    hic quibusdam esse atque,\r\n                    nulla facilis odio distinctio\r\n                    perferendis laboriosam minus sunt voluptates amet, ullam at quo.\r\n                </p>\r\n\r\n                <h3>This might be where we are today</h3>\r\n                <p className=\"content\">\r\n                    Lorem ipsum, dolor sit amet consectetur adipisicing elit.\r\n                    Consectetur velit iure numquam exercitationem\r\n                    hic quibusdam esse atque,\r\n                    nulla facilis odio distinctio\r\n                    perferendis laboriosam minus sunt voluptates amet, ullam at quo.\r\n                </p>\r\n\r\n                <div className=\"image_list\">\r\n                    <h3>Gallary photos</h3>\r\n                    <ul class=\"four\">\r\n                        <li><img src=\"\" alt=\"\" /></li>\r\n                        <li><img src=\"\" alt=\"\" /></li>\r\n                        <li><img src=\"\" alt=\"\" /></li>\r\n                        <li><img src=\"\" alt=\"\" /></li>\r\n                    </ul>\r\n                </div>\r\n\r\n                <p className=\"content\">\r\n                    Lorem ipsum, dolor sit amet consectetur adipisicing elit.\r\n                    Consectetur velit iure numquam exercitationem\r\n                    hic quibusdam esse atque,\r\n                    nulla facilis odio distinctio\r\n                    perferendis laboriosam minus sunt voluptates amet, ullam at quo.\r\n                </p>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default PostContent","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst Social = () => {\r\n    return (\r\n        <div className=\"social_container\">\r\n            <div className=\"social\">\r\n                <h4>Share </h4>\r\n                <ul className=\"post_list\">\r\n                    <li className=\"social_icon facebook\"><i class=\"fab fa-facebook\"></i></li>\r\n                    <li className=\"social_icon twitter\"><i class=\"fab fa-twitter\"></i></li>\r\n                    <li className=\"social_icon linkedin\"><i class=\"fab fa-linkedin\"></i></li>\r\n                    <li className=\"social_icon envelope\"><i class=\"fas fa-envelope\"></i></li>\r\n                </ul>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Social\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nexport const AuthorFeature = () => {\r\n    return (\r\n        <div className=\"post_sidebar author_feature\">\r\n            <div className=\"tab\">\r\n                <h3>About Author</h3>\r\n                <br />\r\n                <div className=\"img\"></div>\r\n                <p className=\"\">Lorem ipsum dolor sit amet consectetur adipisicing elit.\r\n                    Quasi, sapiente eaque. Voluptatum, accusantium quo.\r\n                    A repellendus debitis placeat voluptate ducimus error!</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const Categories = () => {\r\n    return (\r\n        <div className=\"post_sidebar categories\">\r\n            <h2>Categories </h2>\r\n            <ul className=\"post_list\">\r\n                <li>\r\n                    <Link>\r\n                        <h4>Culture</h4>\r\n                    </Link>\r\n                </li>\r\n\r\n                <li>\r\n                    <Link>\r\n                        <h4>Culture</h4>\r\n                    </Link>\r\n                </li>\r\n\r\n                <li>\r\n                    <Link>\r\n                        <h4>Culture</h4>\r\n                    </Link>\r\n                </li>\r\n\r\n                <li>\r\n                    <Link>\r\n                        <h4>Culture</h4>\r\n                    </Link>\r\n                </li>\r\n\r\n                <li>\r\n                    <Link>\r\n                        <h4>Culture</h4>\r\n                    </Link>\r\n                </li>\r\n\r\n                <li>\r\n                    <Link>\r\n                        <h4>Culture</h4>\r\n                    </Link>\r\n                </li>\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const Newsletter = () => {\r\n    return (\r\n        <div className=\"post_sidebar newsletter_container\">\r\n            <h2>Newsletter SignUp</h2>\r\n            <div className=\"newsletter tab\">\r\n                <div className=\"item\">\r\n                    <form action=\"\" className=\"contact\">\r\n                        <div className=\"input-field\">\r\n                            <input id=\"email\" type=\"email\" className=\"validate email\" onChange={\"fsfs\"} value={\"Hello@yahoo.com\"} placeholder=\"Email\" />\r\n                            <button className=\"btn-flat\">Subscribe</button>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const RecentPost = () => {\r\n    return (\r\n        <div className=\"recent_post post_sidebar\">\r\n            <h2>Recent Posts</h2>\r\n            <ul className=\"post_list\">\r\n                <li>\r\n                    <Link>\r\n                        {/* This should be an image in the future. */}\r\n                        <div className=\"img red\"></div>\r\n                        <div className=\"post_info\">\r\n                            <h3>How to improve the welfare affair.</h3>\r\n                            <h4>{'by Jack man'} / {'December 24th, 2019'}</h4>\r\n                        </div>\r\n                    </Link>\r\n                </li>\r\n\r\n                <li>\r\n                    <Link>\r\n                        {/* This should be an image in the future. */}\r\n                        <div className=\"img blue\"></div>\r\n                        <div className=\"post_info\">\r\n                            <h3>How to improve the welfare affair.</h3>\r\n                            <h4>{'by Jack man'} / {'December 24th, 2019'}</h4>\r\n                        </div>\r\n                    </Link>\r\n                </li>\r\n\r\n                <li>\r\n                    <Link>\r\n                        {/* This should be an image in the future. */}\r\n                        <div className=\"img green\"></div>\r\n                        <div className=\"post_info\">\r\n                            <h3>How to improve the welfare affair.</h3>\r\n                            <h4>{'by Jack man'} / {'December 24th, 2019'}</h4>\r\n                        </div>\r\n                    </Link>\r\n                </li>\r\n            </ul>\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport { TwoUp } from '../../dashboard/ThreeUp'\r\n\r\nexport const AboutAuthor = () => {\r\n    return (\r\n        <div className=\"post_sidebar about_author\">\r\n            <div className=\"tab\">\r\n                <div className=\"img\"></div>\r\n                <div className=\"author_info\">\r\n                    <h3>Guest Author</h3>\r\n                    <h4>Jack Pane</h4>\r\n                    <p className=\"\">Lorem ipsum dolor sit amet consectetur adipisicing elit.\r\n                    Quasi, sapiente eaque. Voluptatum, accusantium quo.\r\n                    A repellendus debitis placeat voluptate ducimus error!</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const RelatedTags = () => {\r\n    return (\r\n        <div className=\"related_tags\">\r\n            <a>Tech</a>\r\n            <a>Tec</a>\r\n            <a>Economist</a>\r\n            <a>Tech</a>\r\n            <a>Plantations</a>\r\n            <a>React</a>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const RelatedPosts = () => {\r\n    return (\r\n        <div className=\"related_posts\">\r\n            <h3>Realted Post</h3>\r\n            <TwoUp/>\r\n        </div>\r\n    )\r\n}","import React, { Component } from 'react'\r\nimport {connect} from 'react-redux'\r\nimport {firestoreConnect} from 'react-redux-firebase'\r\nimport {compose} from 'redux'\r\nimport {increaseViews} from '../../../store/actions/storyStateAction'\r\nimport Hero from './Hero'\r\nimport PostContent from './PostContent'\r\nimport Social from './Social'\r\nimport { Categories, Newsletter, RecentPost, AuthorFeature} from './Aside'\r\nimport { RelatedTags, RelatedPosts, AboutAuthor } from './PostTail'\r\n\r\nclass Post extends Component {\r\n    state = {\r\n\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        // use intervalId from the state to clear the interval\r\n        clearInterval(this.state.timeoutId);\r\n    }\r\n\r\n    render(){\r\n       const { story } = this.props;\r\n\r\n       return (\r\n            <div className=\"main_body_container\">\r\n                <div className=\"main_body post\">\r\n                    <Hero/>\r\n                    <div className=\"main_post\">\r\n                        <div className=\"\">\r\n                            <Social />\r\n                            <PostContent />\r\n                            <RelatedTags />\r\n                        </div>\r\n                        <aside className=\"side_bar\">\r\n                            <AuthorFeature/>\r\n                            <RecentPost />\r\n                            <Categories />\r\n                            <Newsletter />\r\n                        </aside>\r\n                    </div>  \r\n                    <div className=\"post_tail\">\r\n                        <AboutAuthor/>\r\n                        <RelatedPosts/>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n   } \r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        increaseViews: (id) => dispatch(increaseViews(id)),\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    const id = ownProps.match.params.id;\r\n    const stories = state.firestore.data.stories;\r\n    const story = stories ? stories[id] : null;\r\n    return {\r\n        story: story,\r\n        id: id,\r\n        profile: state.firebase.profile[id],\r\n    }\r\n}\r\n\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    firestoreConnect((ownProps) => [\r\n        {\r\n            collection: 'stories', doc: ownProps.match.params.id\r\n        }\r\n    ])\r\n)(Post)","export const createStory = (story, ids) => {\r\n    return (dispatch, getState, {getFirebase, getFirestore}) => {\r\n        // make asyn call to database\r\n        var added = false;\r\n        const firestore = getFirestore();\r\n        const firebase = getFirebase();\r\n        const {stories} = getState();\r\n        const user = firebase.auth().currentUser;\r\n        const userCollection = firestore.collection('users');\r\n\r\n        const collection = story.underReview ? 'reviews' : 'stories';\r\n        const userID = story.underReview ? user.uid : story.userID\r\n        // if(!story.passedReview && !story.underReview) {\r\n        //     firestore.collection('reviews').doc(story.docID).delete().then(() => {\r\n        //         dispatch({ type: 'DOCUMENT_DELETED', story: story });\r\n        //     })\r\n        //     return 0;\r\n        // }\r\n        firestore.collection('stories').add({\r\n            title: story.title,\r\n            content: story.content,\r\n            postID: ids.postId,\r\n            commentsTotal: 0,\r\n            time: new Date(),\r\n            topic: (story.topic).toUpperCase(),\r\n            createdAt: new Date().getTime(),\r\n            userID: user.uid,\r\n            safe: null,\r\n            flags: 0,\r\n            underReview: story.underReview,\r\n            views: 0,\r\n            reactions: {\r\n                laugh: {\r\n                    type: 'laugh',\r\n                    total: 0,\r\n                    active: false\r\n                },\r\n                shook: {\r\n                    type: 'shook',\r\n                    total: 0,\r\n                    active: false\r\n                },\r\n                thumb: {\r\n                    type: 'thumb',\r\n                    total: 0,\r\n                    active: false\r\n                }\r\n            }\r\n        }).then((docRef) => {\r\n            // if(!story.underReview) {\r\n            userCollection.doc(user.uid).collection('posts').add({\r\n                \"posts\": {\r\n                    title: story.title,\r\n                    content: story.content,\r\n                    postID: ids.postId,\r\n                    createdAt: new Date().getTime(),\r\n                    docId: docRef.id\r\n                }\r\n            })\r\n            firestore.collection('Ids').doc(\"postIds\").update({\r\n                totalIds: firebase.firestore.FieldValue.increment(1)\r\n            })\r\n            firestore.collection('users').doc(user.uid).set({\r\n                lastPost: Date.now()\r\n            }, { merge: true })\r\n            dispatch({ type: 'ADDED_STORY', story: story });\r\n            // firestore.collection('reviews').doc(story.docID).delete().then(() => {\r\n            //     dispatch({ type: 'DOCUMENT_DELETED', story: story });\r\n            // })\r\n            // } else {\r\n            //     \r\n            //     dispatch({ type: 'ADDED_STORY', story: story });\r\n            // }\r\n        }).catch((err) => {\r\n            dispatch({ type: 'CREATED_STORY_ERROR', err });\r\n        })\r\n    }\r\n}\r\n\r\nexport const increaseViews = (id) => {\r\n    return (dispatch, getState, { getFirebase, getFirestore }) => {\r\n        const firestore = getFirestore();\r\n        const firebase = getFirebase();\r\n        firestore.collection('stories').doc(id).set({\r\n            views: firebase.firestore.FieldValue.increment(1)\r\n        }, { merge: true })\r\n        // dispatch({ type: 'INCREASE_VIEWS' })\r\n    }\r\n}\r\n\r\n\r\nconst isEmpty = (obj) => {\r\n    for( var key in obj) {\r\n        if (obj[key] === null || obj[key] === '')\r\n            return true;\r\n    }\r\n    return false;\r\n}","import React, {Component} from 'react'\r\nimport { Redirect } from 'react-router-dom'\r\nimport {connect} from 'react-redux'\r\nimport {createStory} from '../../store/actions/storyStateAction'\r\nimport {compose} from 'redux'\r\nimport { firestoreConnect } from 'react-redux-firebase';\r\nimport {saveData} from '../miniComponents/localstoreage'\r\n\r\nclass CreateStory extends Component {\r\n    state = {\r\n        title: '',\r\n        content: '',\r\n        topic: '',\r\n        adding: false,\r\n        errors: false,\r\n        storyError: null,\r\n        topScrolled: false,\r\n        underReview: true,\r\n        openDropdown: false\r\n    }\r\n\r\n    handleTopic = (e) => {\r\n        this.setState({\r\n            topic: e.target.id\r\n        })\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        })\r\n    }\r\n\r\n    isEmpty = () => {\r\n        let errors = [];\r\n        let concatErrors = (string, newString) => string + ' & ' + newString;\r\n        if (this.state.content === '') {\r\n            errors.push('You have to write something')\r\n        } else if (this.state.title === '') {\r\n            errors.push('You need a title')\r\n        } else if (this.state.topic === '') {\r\n            errors.push('Please pick a topic ^')\r\n            document.getElementById('dropdown').style.color = '#ffffff';\r\n            document.getElementById('dropdown').style.backgroundColor = '#222222';\r\n        }\r\n        if (errors.length === 0) { this.setState({ errors: '' }); return false } else { errors = (errors.length > 1) ? (errors.reduce(concatErrors)) : (errors[0]); };\r\n        this.setState({\r\n            errors: errors\r\n        })\r\n        return true;\r\n    }\r\n\r\n    checkAuth = () => {\r\n        const { auth } = this.props;\r\n        if (!auth.uid) {\r\n            this.setState({\r\n                errors: 'You need to sign in'\r\n            })\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        \r\n        const { storyError, Ids } = this.props;\r\n        if (this.checkAuth() === false) { return 0 }\r\n        if (this.isEmpty() === true) { return 0 }\r\n        if (this.state.adding || this.state.title === '' || this.state.content === '') { this.setState({ storyError: 'Make sure you have a Title and a Story'}); return 0}\r\n        this.setState({intervalId: setInterval(this.getTimerVal.bind(this), 1000) })\r\n        // deleteData('story');\r\n        this.props.createStory(this.state, { postId: Ids.postIds.totalIds, userId: Ids.postIds.totalIds});\r\n        this.setState({\r\n            adding: (storyError) ? false : true\r\n        })\r\n    }\r\n\r\n    getTimerVal = () => {\r\n        const { lastPost } = this.props.profile;\r\n        if (this.state.timerVal >= 4) { clearInterval(this.state.intervalId); }\r\n        this.setState({ timerVal: (((Date.now()) - lastPost) / 1000) / 60 })\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        var intervalId = setInterval(this.getTimerVal.bind(this), 1000);\r\n\r\n        this.setState({ intervalId: intervalId });\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        // use intervalId from the state to clear the interval\r\n        clearInterval(this.state.intervalId);\r\n        saveData('story', this.state);\r\n    }\r\n\r\n    trunc_text = (text) => {\r\n        let maxLen = 200;\r\n        maxLen = (text.length < maxLen) ? text.length : maxLen;\r\n\r\n        return text.substring(0, maxLen);\r\n    }\r\n\r\n    toggleDropdown = () => {\r\n        this.setState({\r\n            openDropdown: !this.state.openDropdown\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const { errors } = this.state;\r\n        const {auth } = this.props;\r\n        const topics = ['Science', 'Technology', 'Engineering', 'Art', 'Math', 'Misc', 'Tech News', 'Money', 'Education', 'Science', 'Steam', 'Stem', 'Jobs', 'react'];\r\n        if (!auth.uid) return <Redirect to='/welcome' />\r\n        return (\r\n            <div className=\"write_container container\">\r\n                <form className=\"write\" onSubmit={this.handleSubmit}>\r\n                    <div className=\"header\">\r\n                        <h3 className=\"dark-text test-darken-3\">Tell us your story.</h3>\r\n                    </div>\r\n                    <div className=\"input-fields\">\r\n                        <div className=\"input-field topic\">\r\n                            <div id=\"dropdown\" className=\"dropdown\" onClick={this.toggleDropdown}>\r\n                                <span>Topic - {this.state.topic}</span>\r\n                                <div className={\"dropdown_content \" + (this.state.openDropdown ? '' : 'display_none')}>\r\n                                    {topics.map((topic, id) => {\r\n                                        return (\r\n                                            <p id={topic} key={id} className=\"dropdown_item noselect\" onClick={this.handleTopic}>{topic}</p>\r\n                                        )\r\n                                    })}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"input-field title\">\r\n                            <input type=\"text\" id='title' maxLength=\"30\" onChange={this.handleChange} value={this.state.title} placeholder=\"Title\"/>\r\n                        </div>\r\n\r\n                        <div className=\"input-field textarea-field content\">\r\n                            <h4>Keep it civil</h4>\r\n                            <textarea id=\"content\" className=\"materialize-textarea\" spellCheck=\"true\" onChange={this.handleChange} value={this.state.content} placeholder=\"Write your post here\"></textarea>\r\n                        </div>\r\n\r\n                        <div className=\"input-field\">\r\n                            <div className=\"red-text error-message center\">\r\n                                {<p>{errors}</p>}\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"button-input\">\r\n                            {\r\n                                (this.state.timerVal <= (2) || this.state.timerVal == null) ? (\r\n                                    (this.state.timerVal > 0) ? (\r\n                                        <p className=\"red-text error-message center\">Wait {((2) - Math.floor(this.state.timerVal))} Minutes </p>\r\n                                    ) : (\r\n                                            null\r\n                                        )\r\n                                ) : (\r\n                                        <button className=\"btn-flat white-text waves-effect waves-light\">POST</button>\r\n                                    )\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        createStory: (story, ids) => dispatch(createStory(story, ids))\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        storyError: state.storyState.error,\r\n        storyAdded: state.storyState.addedStory,\r\n        Ids: state.firestore.data.Ids,\r\n        auth: state.firebase.auth,\r\n        profile: state.firebase.profile\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    firestoreConnect([\r\n        {collection: 'Ids'}\r\n    ])\r\n)(CreateStory)","export const saveData = (key, data) => {\r\n    localStorage.setItem(key, JSON.stringify(data));\r\n};\r\n\r\nexport const getData = (key) => {\r\n    return JSON.parse(localStorage.getItem(key));\r\n};\r\n\r\nexport const deleteData = (key) => {\r\n    localStorage.removeItem(key)\r\n}","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { signUp, closeAuthModule, signIn} from '../../../store/actions/authActions'\r\nimport { auth } from 'firebase';\r\n\r\nclass showAuthModule extends Component {\r\n    state = {\r\n        first_name:'jane',\r\n        last_name:'dow',\r\n        email: '',\r\n        password: '',\r\n        password_confirm: '',\r\n        errors: '',\r\n        // open: this.props.show_module,\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        })\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({\r\n            errors: this.props.signUp_error\r\n        })\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n        if (!this.inputError()) { return 0 }\r\n        const authInfo = this.state;\r\n        if(this.props.show_module_signIn) {\r\n            this.props.signIn(authInfo);\r\n        } else {\r\n            this.props.signUp(authInfo);\r\n        }\r\n    }\r\n\r\n    validateEmail = (email) => {\r\n        let re = /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n        return re.test(email);\r\n    }\r\n\r\n    inputError = () => {\r\n        let errors = [];\r\n        let concatErrors = (string, newString) => string + ', ' + newString;\r\n        if (!this.validateEmail(this.state.email)) {\r\n            errors.push('Please give us a valid email');\r\n        }\r\n        if ((this.state.password === '')) {\r\n            errors.push('Password field is can\\'t\\ be empty');\r\n        }\r\n        if(!this.props.show_module_signIn) {\r\n            if (this.state.password !== this.state.password_confirm) {\r\n                errors.push('Passwords do not match');\r\n            }\r\n            if ((this.state.password.length < 6)) {\r\n                errors.push('Password should be at least 6 characters');\r\n            }\r\n        }\r\n        if (errors.length === 0) { this.setState({ errors: '' }); return true } else { errors = (errors.length > 1) ? (errors.reduce(concatErrors)) : (errors[0]); };\r\n        this.setState({\r\n            errors: errors\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const { errors } = this.state;\r\n        if (this.props.show_module_signUp || this.props.show_module_signIn) { \r\n            const signIn = this.props.show_module_signIn;\r\n            return (\r\n                <div className=\"auth_module_container\">\r\n                    {document.getElementById('body').style.overflow = \"hidden\"}\r\n                    <div className=\"auth_module row\">\r\n                        <h2>{(signIn) ? 'LOG IN' : 'Join the network'}</h2>\r\n                        <i className=\"material-icons close right\" onClick={this.props.closeAuthModule}>close</i>\r\n                        <form className=\"auth col s12\">\r\n                            <div className=\"row\">\r\n                                <div className=\"input-field col s12\">\r\n                                    <input id=\"email\" type=\"email\" className=\"validate email\" onChange={this.handleChange} value={this.state.email} />\r\n                                    <label htmlFor=\"disabled\">Email</label>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"row\">\r\n                                <div className=\"input-field col s12\">\r\n                                    <input id=\"password\" type=\"password\" className=\"validate password\" onChange={this.handleChange} value={this.state.password} />\r\n                                    <label htmlFor=\"password\">Password</label>\r\n                                </div>\r\n                            </div>\r\n                            {(signIn) ? null : (\r\n                                <div className=\"row\">\r\n                                    <div className=\"input-field col s12\">\r\n                                        <input id=\"password_confirm\" type=\"password\" className=\"validate password\" onChange={this.handleChange} value={this.state.password_confirm} />\r\n                                        <label htmlFor=\"password2\">Confirm Password</label>\r\n                                    </div>\r\n                                </div>\r\n                            )}\r\n    \r\n                            <div className=\"btn-flat waves-effect waves-light btn-post\" onClick={this.handleSubmit}>{(signIn) ? 'LOG IN' : 'Sign Up'}</div>\r\n                        </form>\r\n                        <div className=\"red-text error-message center\">\r\n                            {<p className=\"red-text error-message center\">{errors || this.props.signUp_error}</p>}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )\r\n        } else {\r\n            document.getElementById('body').style.overflow = \"auto\";  \r\n            return (null)\r\n        }\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        show_module_signUp: state.auth.show_signUp,\r\n        show_module_signIn: state.auth.show_signIn,\r\n        signUp_error: state.auth.signUp_error\r\n        // nav: state.nav,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        signUp: (authInfo) => dispatch(signUp(authInfo)),\r\n        signIn: (authInfo) => dispatch(signIn(authInfo)),\r\n        closeAuthModule: () => dispatch(closeAuthModule())\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(showAuthModule) ","import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\n\r\nconst PageNotFound = (props) => {\r\n    return (\r\n        <div className=\"center-align large page_not_found_container\">\r\n            <div className=\"page_not_found\">\r\n                <h1>404</h1>\r\n                <h4>Page not found</h4>\r\n                <p> The page you are looking for does not exist anywhere on our servers. Not sure how you got here but lets get you  <NavLink className=\"center\" to=\"/\"> <span className=\"\">Home</span> </NavLink></p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PageNotFound ","import React from 'react'\r\n\r\nconst Footer = () => {\r\n    // var location = window.location.pathname;\r\n    return (\r\n        <footer>\r\n            <div className=\"footer_container\">\r\n                <div className=\"newsletter tab\">\r\n                    <div className=\"item\">\r\n                        <form action=\"\" className=\"contact\">\r\n                            <div className=\"input-field\">\r\n                                <input id=\"email\" type=\"email\" className=\"validate email\" onChange={\"fsfs\"} value={\"Hello\"} placeholder=\"Email\" />\r\n                                <button className=\"btn-flat\">Subscribe</button>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n                <div className=\"contact tab\">\r\n                    <div className=\"contact_info\">\r\n                        <h3>Contact Me</h3>\r\n                        <p>Email: olawal196@gmail.com</p>\r\n                    </div>\r\n                </div>\r\n                <div className=\"social tab\">\r\n                    <div className=\"socials\">\r\n                        <div className=\"social_icons\">\r\n                            <div className=\"social_icon\"><i class=\"fab fa-twitter\"></i></div>\r\n                            <div className=\"social_icon\"><i class=\"fab fa-linkedin\"></i></div>\r\n                            <div className=\"social_icon\"><i class=\"fab fa-github\"></i></div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"copy\">\r\n                    <h4>&copy; Chrona 2019</h4>\r\n                </div>\r\n            </div>\r\n        </footer>\r\n    )\r\n}\r\n\r\nexport default Footer","import React, { Component } from 'react';\r\nimport { BrowserRouter, Switch, Route } from 'react-router-dom'\r\nimport Navbar from './components/layout/Navbar';\r\nimport Dashboard from './components/dashboard/Dashboard';\r\nimport Topic from './components/dashboard/Topic';\r\nimport Post from './components/stories/PostDetails/Post';\r\nimport CreateStory from './components/stories/CreateStory';\r\nimport AuthModule from './components/miniComponents/auth/AuthModule';\r\nimport PageNotFound from './components/dashboard/PageNotFound';\r\nimport Footer from './components/layout/Footer'\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <div className=\"main_container\">\r\n            <BrowserRouter>\r\n              <div className=\"main\">\r\n                <Navbar />\r\n                <AuthModule/>\r\n                <Switch>\r\n                  <Route exact path='/' component={Dashboard} />\r\n                  <Route path='/topics/:id' component={Topic} />\r\n                  <Route path='/post/:id' component={Post} />\r\n                  <Route path='/create' component={CreateStory} />\r\n                  <Route path='/page/:id' component={Dashboard} />\r\n                  <Route path='/404' component={PageNotFound} />\r\n                  <Route component={PageNotFound} />\r\n                </Switch>\r\n                <Footer />\r\n              </div>\r\n            </BrowserRouter>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","const initState = {\r\n    stories: [''],\r\n    addedStory: false,\r\n    error: \"\"\r\n}\r\n\r\nconst storyStateReducer = (state = [], action) => {\r\n    switch (action.type) {\r\n        case 'ADDED_STORY':\r\n            window.location = '/'\r\n            return {\r\n                ...state,\r\n            }\r\n        case 'CREATED_STORY_ERROR':\r\n            return state\r\n        case 'EMPTY_VALUE':\r\n            return {\r\n                ...state,\r\n                addedStory: false,\r\n                error: \"Make sure you have a Title and a Story\"\r\n            }\r\n        case 'APPEND_STORY':\r\n            // const storyArr = state.stories;\r\n            // storyArr.push(action.storyData);\r\n            return state\r\n            // break;\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default storyStateReducer","const initState = {\r\n    loaded: false,\r\n    totalStories: 0,\r\n    topic_limit: 6\r\n}\r\n\r\nconst storyReducer = (state = initState, action) => {\r\n    switch (action.type) {\r\n        case 'ADDED_STORY':\r\n            window.location = '/'\r\n            return {\r\n                ...state,\r\n            }\r\n        case 'CREATED_STORY_ERROR':\r\n            return state\r\n        case 'EMPTY_VALUE':\r\n            return {\r\n                ...state,\r\n                addedStory: false,\r\n                error: \"Make sure you have a Title and a Story\"\r\n            }\r\n        case 'APPEND_STORY':\r\n            return {\r\n                ...state,\r\n                loaded: true,\r\n                totalStories: action.storyInfo.totalStories\r\n            }\r\n        case 'LOAD_MORE': \r\n            return {\r\n                ...state,\r\n                topic_limit: state.topic_limit + 6\r\n            }\r\n            break;\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default storyReducer","const initState = {\r\n    comments: [\r\n        [ \"Comment 1\" ],\r\n        [ \"Comment 2\" ],\r\n        [ \"Comment 3\" ]\r\n    ],\r\n    addedComment: false,\r\n    error: \"\"\r\n}\r\n\r\nconst storyReducer = (state = initState, action) => {\r\n    switch (action.type) {\r\n        case 'ADDED_COMMENT':\r\n            return {\r\n                ...state,\r\n            }\r\n        case 'CREATED_COMMENT_ERROR':\r\n            return state\r\n        case 'EMPTY_VALUE':\r\n            return {\r\n                ...state,\r\n                addedStory: false,\r\n                error: \"Make sure you have a Title and a Story\"\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default storyReducer","const initState = {\r\n    type: '',\r\n    id: '',\r\n}\r\n\r\nconst reactionReducer = (state = initState, action) => {\r\n    switch (action.type) {\r\n        case 'UPDATED_REACTION':\r\n            const id = action.reaction.id;\r\n            return {\r\n                ...state,\r\n                [id]: {\r\n                    type: action.reaction.type\r\n                }\r\n            }\r\n        case 'ADDED_BOOKMARK': \r\n            return {\r\n                ...state,\r\n                [action.bookmark.id]: {\r\n                    bookmarked: action.bookmark.bookmarked\r\n                }\r\n            }\r\n        case 'REMOVED_BOOKMARK':\r\n            return {\r\n                ...state,\r\n                [action.bookmark.id]: {\r\n                    bookmarked: action.bookmark.bookmarked\r\n                }\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default reactionReducer","const initState = {\r\n    show_signUp: false,\r\n    show_signIn: false,\r\n    signIn_error: '',\r\n    signUp_error: ''\r\n}\r\n\r\nconst authReducer = (state = initState, action) => {\r\n    switch (action.type) {\r\n        case 'LOGIN_ERROR':\r\n            return {\r\n                show_signIn: true,\r\n                signIn_error: action.err.message,\r\n            }\r\n        case 'LOGIN_SUCCESS':\r\n            window.location = '/'\r\n            return {\r\n                show_signIn: false,\r\n                signIn_error: ''\r\n            }\r\n        case 'SIGNUP_SUCCESSFUL':\r\n            window.location = '/'\r\n            return {\r\n                show_signUp: false,\r\n                signUp_error: ''\r\n            }\r\n        case 'SIGNUP_ERROR':\r\n            return {\r\n                signUp_error: action.err.message,\r\n                show_signUp: true\r\n            }\r\n        case 'USER_DELETED':\r\n            break\r\n        case 'SHOW_SIGNUP_MODULE':\r\n            return {\r\n                ...state,\r\n                show_signUp: true,\r\n            }\r\n        case 'SHOW_SIGNIN_MODULE':\r\n            return {\r\n                ...state,\r\n                show_signIn: true,\r\n            }\r\n        case 'CLOSE_MODULE':\r\n            return {\r\n                ...state,\r\n                show_signUp: false,\r\n                show_signIn: false\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n    return 0;\r\n}\r\n\r\nexport default authReducer","const initState = {\r\n    mobileToggled: false,\r\n    openFullNav: false\r\n}\r\n\r\nconst navReducer = (state = initState, action) => {\r\n    switch (action.type) {\r\n        case 'MOBILE_NAV_TOGGLED':\r\n            if (!state.mobileToggled) { document.getElementById('body').style.overflow = \"hidden\" } else { document.getElementById('body').style.overflow = \"auto\";}\r\n            return {\r\n                ...state,\r\n                mobileToggled: !state.mobileToggled\r\n            }\r\n        case 'MOBILE_NAV_RESET': \r\n            return {\r\n                ...state,\r\n                mobileToggled: false\r\n            }\r\n        case 'PAGINATE': \r\n            return {\r\n                ...state,\r\n                mobileToggled: false\r\n            }\r\n        case 'OPEN_FULL_NAV': \r\n            return {\r\n                ...state,\r\n                openFullNav: true\r\n            }\r\n        case 'CLOSE_FULL_NAV': \r\n            return {\r\n                ...state,\r\n                openFullNav: false,\r\n            }\r\n        case 'TOGGLE_FULL_NAV':\r\n            return {\r\n                ...state,\r\n                openFullNav: !state.openFullNav\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default navReducer","import storyStateReducer from './storyStateReducer'\r\nimport storyReducer from './storyReducer'\r\nimport commentReducer from './commentReducer'\r\nimport reactionsReducer from './reactionsReducer'\r\nimport authReducer from './authReducer'\r\nimport navReducers from './navReducer'\r\nimport { combineReducers } from 'redux'\r\nimport { firestoreReducer } from 'redux-firestore';\r\nimport {firebaseReducer} from 'react-redux-firebase'\r\n\r\nconst rootReducer = combineReducers({\r\n    nav: navReducers,\r\n    auth: authReducer,\r\n    storyState: storyStateReducer,\r\n    stories: storyReducer,\r\n    comments: commentReducer,\r\n    reaction: reactionsReducer,\r\n    firestore: firestoreReducer,\r\n    firebase: firebaseReducer\r\n})\r\n\r\nexport default rootReducer","import firebase from 'firebase/app'\r\nimport 'firebase/firestore'\r\nimport 'firebase/auth'\r\n\r\nvar config = {\r\n    apiKey: \"AIzaSyBT9xbz88ZJ06unQVQSpmbSOt9hF_TVbaE\",\r\n    authDomain: \"anon-71390.firebaseapp.com\",\r\n    databaseURL: \"https://anon-71390.firebaseio.com\",\r\n    projectId: \"anon-71390\",\r\n    storageBucket: \"anon-71390.appspot.com\",\r\n    messagingSenderId: \"629190899949\"\r\n};\r\n\r\nfirebase.initializeApp(config);\r\n// firebase.firestore().settings({timestampsInSnapshots: true});\r\n// const firestore = firebase.firestore();\r\n// const settings = {/* your settings... */ timestampsInSnapshots: true };\r\n// firestore.settings(settings);\r\n\r\nexport default firebase;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport './index.css';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { createStore, applyMiddleware, compose } from 'redux'\r\nimport rootReducer from './store/reducers/rootReducer';\r\nimport { Provider } from 'react-redux'\r\nimport thunk from 'redux-thunk'\r\nimport { reduxFirestore, getFirestore } from 'redux-firestore'\r\nimport { reactReduxFirebase, getFirebase } from 'react-redux-firebase'\r\nimport fbConfig from './config/fbConfig'\r\n\r\nconst store = createStore(rootReducer, \r\n    compose(\r\n        applyMiddleware(thunk.withExtraArgument({ getFirebase, getFirestore })),\r\n        reduxFirestore(fbConfig),\r\n        reactReduxFirebase(fbConfig, {useFirestoreForProfile: true, userProfile: 'users', attachAuthIsReady: true})\r\n    )\r\n)\r\n\r\nstore.firebaseAuthIsReady.then(() => {\r\n    ReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\r\n    serviceWorker.unregister();\r\n})\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\n"],"sourceRoot":""}